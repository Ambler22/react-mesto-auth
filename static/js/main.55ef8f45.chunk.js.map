{"version":3,"sources":["images/header.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","components/AddPlacePopup.js","components/DeleteCardPopup.js","components/ImagePopup.js","utils/api.js","components/Login.js","components/Register.js","components/ProtectedRoute.js","components/InfoTooltip.js","components/auth.js","images/success.svg","images/fail.svg","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","src","headerLogo","alt","exact","path","email","to","onClick","signOut","puth","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","type","onCardDelete","link","name","onCardClick","onCardLike","id","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","card","Footer","Date","getFullYear","PopupWithForm","isOpen","title","onSubmit","action","noValidate","children","buttonText","onClose","EditAvatarPopup","avatarRef","useRef","e","preventDefault","onUpdateAvatar","current","value","placeholder","tabIndex","required","ref","EditProfilePopup","useState","setName","description","setDescription","useEffect","onUpdateUser","minLength","maxLength","onChange","target","AddCardPopup","nameRef","linkRef","DeleteCardPopup","ImagePopup","api","config","this","url","headers","res","ok","json","Promise","reject","status","fetch","then","_getResponseData","data","method","body","JSON","stringify","cardId","authorization","Login","valueEmail","setValueEmail","valuePassword","setValuePassword","password","Register","console","log","registration","ProtectedRoute","isLoggedIn","InfoTooltip","notifyPopupInfo","image","BASE_URL","App","history","useHistory","setCurrentUser","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isNotifyPopupOpen","setIsNotifyPopupOpen","setNotifyPopupInfo","selectedCard","setSelectedCard","setCards","setIsLoggedIn","handleNotifyPopupOpen","changeNotifyPopup","text","closeAllPopups","all","getUserInfo","getCards","userData","catch","err","token","jwt","localStorage","getItem","push","Provider","removeItem","setItem","authorize","register","success","fail","component","deleteLike","setLike","newCard","state","c","deleteCard","filter","user","setUserInfo","setUserAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55ef8f45.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header.03b78ada.svg\";","import React from 'react';\nimport { Link, Switch, Route } from 'react-router-dom';\nimport headerLogo from '../images/header.svg';\n\nfunction Header(props) {\n    return (\n        <header className=\"header page__content\" >\n            <img src={headerLogo} className=\"header__logo\" alt=\"логотип\" />\n            <div className=\"header__elements\">\n                <Switch >\n                    <Route exact path=\"/\" >\n                        <p className=\"header__email\">{props.email}</p>\n                        <Link to=\"/sign-in\" className=\"header__button\" onClick={props.signOut}>Выйти</Link>\n                    </Route>\n\n                    <Route puth=\"/sign-in\">\n                        <Link to=\"sign-up\" className=\"header__button\">Регистрация</Link>\n                    </Route>\n\n                    <Route puth=\"/sign-up\">\n                        <Link to=\"sign-in\" className=\"header__button\">Войти</Link>\n                    </Route>\n                </Switch>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    const isOwn = props.owner._id === currentUser._id; // Определяем, являемся ли мы владельцем текущей карточки\n    const cardDeleteButtonClassName = (\n        `card__delete ${isOwn ? 'card__delete' : 'card__delete_none'}` // Создаём переменную, которую после зададим в `className` для кнопки удаления\n    );\n\n    const isLiked = props.likes.some(i => i._id === currentUser._id); // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n    const cardLikeButtonClassName = `card__like ${isLiked ? 'card__like_active' : ''}`; // Создаём переменную, которую после зададим в `className` для кнопки лайка\n\n    function handleClick() {\n        props.onCardClick(props);\n    }\n\n    function handleLikeClick() {\n        props.onCardLike(props);\n    }\n\n    function handleDeleteClick() {\n        props.onCardDelete(props);\n    }\n\n    return (\n        <div key={props.id} className=\"card\">\n            <div className=\"card\">\n                <button type=\"button\" className={`${cardDeleteButtonClassName} hover`} onClick={handleDeleteClick}></button>\n                <img src={props.link} className=\"card__img\" alt={props.name} onClick={handleClick} />\n                <div className=\"card__description\">\n                    <h2 className=\"card__text\">{props.name}</h2>\n                    <div className=\"\">\n                        <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick} aria-label=\"Нравится\"></button>\n                        <p className=\"card__like_number\"></p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from \"react\";\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main>\n            <section className=\"profile page__content\">\n                <div className=\"profile__info\">\n                    <div className=\"profile__avatar-icon\" onClick={props.onEditAvatar}>\n                        <img src={currentUser.avatar} className=\"profile__avatar\" alt=\"Аватар\" />\n                    </div>\n                    <div className=\"profile__content\">\n                        <div className=\"profile__add\">\n                            <h1 className=\"profile__name\">{currentUser.name}</h1>\n                            <button type=\"button\" className=\"profile__edit hover\" onClick={props.onEditProfile}></button>\n                        </div>\n                        <p className=\"profile__jod\">{currentUser.about}</p>\n                    </div>\n                </div>\n                <button type=\"button\" className=\"profile__button hover\" onClick={props.onAddPlace}></button>\n            </section>\n            <section className=\"cards page__content\">\n            </section>\n\n            <section className=\"cards page__content\">\n                {props.cards.map((card) => (\n                    <Card\n                        key={card._id}\n                        {...card}\n                        onCardClick={props.onCardClick}\n                        onCardLike={props.onCardLike}\n                        onCardDelete={props.onCardDelete}/>\n                ))}\n            </section>\n        </main>\n    )\n}\n\nexport default Main;","function Footer() {\n    return (\n        <footer className=\"footer page__content\">\n            <p className=\"footer__copyright\">&copy; {new Date().getFullYear()} Дроздов Роман</p>\n        </footer>\n    )\n}\n\nexport default Footer;","function PopupWithForm(props) {\n\n    return (\n        <div className={`popup ${props.isOpen && 'popup_is-opened'}`}>\n            <div className=\"popup__content\">\n                <h2 className=\"popup__title\">{props.title}</h2>\n                <form onSubmit={props.onSubmit} action=\"#\" name={`form-${props.name}`} className={`form form-${props.name}`} noValidate>\n                    <fieldset className=\"form-container\">\n                    {props.children}\n                    <button type=\"submit\"\n                        className={`form-container__button form-container__button_${props.name} popup__load`}>{props.buttonText}</button>\n                    </fieldset>\n                </form>\n                <button type=\"button\" className=\"popup__img-close hover\" onClick={props.onClose}></button>\n            </div>\n        </div>\n    )\n}\n\nexport default PopupWithForm;","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopup(props) {\n\n    const avatarRef = React.useRef();\n\n    function handleSubmit(e) {\n        e.preventDefault();\n      \n        props.onUpdateAvatar({\n          avatar: avatarRef.current.value,\n        });\n      }\n\n    return (\n        <PopupWithForm\n            name='avatar_update'\n            title='Обновить аватар'\n            buttonText='Создать'\n\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            onSubmit={handleSubmit}\n        >\n\n            <input id=\"avatarurl\" type=\"url\" name=\"link\"\n                className={`form-container__input form-container__input_${props.name}`}\n                placeholder=\"Ссылка на картинку\" tabIndex=\"2\" required ref={avatarRef}/>\n            <span className=\"form-container__input-error\" id=\"avatarurl-error\"></span>\n        </PopupWithForm>\n    )\n}\n\nexport default EditAvatarPopup;","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n\n    function handleChangeName(e) {\n        setName(e.target.value);\n    }\n\n    function handleChangeDescription(e) {\n        setDescription(e.target.value);\n    }\n\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser, props.isOpen]);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n      \n        props.onUpdateUser({ // Передаём значения управляемых компонентов во внешний обработчик\n          name,\n          about: description,\n        });\n      }\n\n    return (\n        <PopupWithForm\n            name='profile'\n            title='Редактировать профиль'\n            buttonText='Сохранить'\n\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            onSubmit={handleSubmit}\n        >\n            <input id={`${props.name}name`} type=\"text\" name=\"name\" className=\"form-container__input\"\n                required=\"Введите имя\" tabIndex=\"1\" minLength=\"2\" maxLength=\"40\" placeholder=\"Имя\" value={name || ''} onChange={handleChangeName} />\n            <span className=\"form-container__input-error\" id={`${props.name}name-error`}></span>\n            <input id={`${props.name}description`} type=\"text\" name=\"description\" className=\"form-container__input\"\n                required=\"Введите описание\" tabIndex=\"2\" minLength=\"2\" maxLength=\"200\" placeholder=\"Занятие\" value={description || ''} onChange={handleChangeDescription} />\n            <span className=\"form-container__input-error\" id={`${props.name}description-error`}></span>\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup;","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddCardPopup(props) {\n\n    const nameRef = React.useRef();\n    const linkRef = React.useRef();\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        props.onAddPlace({\n            name: nameRef.current.value,\n            link: linkRef.current.value,\n        });\n    }\n\n    return (\n        <PopupWithForm\n            name='cards'\n            title='Новое место'\n            buttonText='Создать'\n\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            onSubmit={handleSubmit}\n        >\n\n            <input id={`${props.name}name`} type=\"text\" name=\"name\"\n                className=\"form-container__input form-container__input_title\" placeholder=\"Название\"\n                tabIndex=\"1\" minLength=\"2\" maxLength=\"30\" required ref={nameRef} />\n            <span className=\"form-container__input-error\" id={`${props.name}name-error`}></span>\n            <input id={`${props.name}url`} type=\"url\" name=\"link\" className=\"form-container__input form-container__input_image\"\n                placeholder=\"Ссылка на картинку\" tabIndex=\"2\" required ref={linkRef} />\n            <span className=\"form-container__input-error\" id={`${props.name}url-error`}></span>\n\n        </PopupWithForm>\n    )\n}\n\nexport default AddCardPopup;","import PopupWithForm from \"./PopupWithForm\";\n\nfunction DeleteCardPopup(props) {\n    return (\n        <PopupWithForm\n            name='cards_delete'\n            title='Вы уверены?'\n            buttonText='Да'\n        />\n    )\n}\n\nexport default DeleteCardPopup;","import React from \"react\";\n\nfunction ImagePopup(props) {\n    return (\n        <div className={`popup popup-image ${props.card.name && 'popup_is-opened'}`} //props.card.name !== undefined ? 'popup_is-opened' : ''\n            onClose={props.onClose}>\n            <div className=\"popup-image__content\">\n                <img src={props.card.link} className=\"popup-image__photo\" alt={props.card.name} />\n                <h2 className=\"popup-image__title\">{props.card.name}</h2>\n                <button type=\"button\" className=\"popup__img-close hover\" onClick={props.onClose}></button>\n            </div>\n        </div>\n    )\n}\n\nexport default ImagePopup;","class Api {\n    constructor(config) {\n        this.url = config.url;\n        this.headers = config.headers;\n    }\n\n_getResponseData(res) {\n    if (!res.ok) {\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n}\n\ngetUserInfo() {\n    return fetch(`${this.url}/users/me`, {\n        headers: this.headers,\n    })\n    .then(res => this._getResponseData(res));\n};\n\ngetCards() {\n    return fetch(`${this.url}/cards`, {\n        headers: this.headers,\n    })\n    .then(res => this._getResponseData(res));\n};\n\nsetUserInfo(data) {\n    return fetch(`${this.url}/users/me`, {\n        method: 'PATCH',\n        headers: this.headers,\n        body: JSON.stringify({\n            name: data.name,\n            about: data.about,\n        })\n    })\n    .then(res => this._getResponseData(res));\n}\n\nsetUserAvatar(data) {\n    return fetch(`${this.url}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: this.headers,\n        body: JSON.stringify({\n            avatar: data,\n        })\n    })\n    .then(res => this._getResponseData(res));\n}\n\nsetCards(data) {\n    return fetch(`${this.url}/cards`, {\n        method: 'POST',\n        headers: this.headers,\n        body: JSON.stringify({\n            name: data.name,\n            link: data.link,\n        })\n    })\n    .then(res => this._getResponseData(res));\n}\n\ndeleteCard(cardId) {\n    return fetch(`${this.url}/cards/${cardId}`, {\n        method: 'DELETE',\n        headers: this.headers,\n        })\n        .then(res => this._getResponseData(res));\n}\n\nsetLike(cardId) {\n    return fetch(`${this.url}/cards/likes/${cardId}`, {\n        method: 'PUT',\n        headers: this.headers,\n    })\n    .then(res => this._getResponseData(res));\n}\n\ndeleteLike(cardId) {\n    return fetch(`${this.url}/cards/likes/${cardId}`, {\n        method: 'DELETE',\n        headers: this.headers,\n    })\n    .then(res => this._getResponseData(res));\n}\n\n}\n\nconst api = new Api ({\n    url: 'https://nomoreparties.co/v1/cohort-25',\n    headers: {\n      authorization: '2db1777b-72eb-4863-bc5d-c00b58939d4b',\n      'Content-Type': 'application/json'\n    }\n});\n\nexport default api;","import React from 'react';\n\nfunction Login(props) {\n\n    const [valueEmail, setValueEmail] = React.useState('');\n    const [valuePassword, setValuePassword] = React.useState('');\n\n    function handleChangeEmail(e) {\n        setValueEmail(e.target.value);\n    }\n\n    function handleChangePassword(e) {\n        setValuePassword(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        const email = valueEmail;\n        const password = valuePassword;\n\n        props.authorization(email, password);\n    }\n\n    return (\n    <div className=\"login\">\n        <h1 className=\"login__title\">Вход</h1>\n        <form className=\"login__form\" onSubmit={handleSubmit}>\n            <input className=\"login__input\" placeholder=\"Email\" value={valueEmail} onChange={handleChangeEmail}></input>\n            <input className=\"login__input\" placeholder=\"Пароль\" value={valuePassword} onChange={handleChangePassword}></input>\n            <button className=\"login__button\" type=\"submit\">Войти</button>\n        </form>\n    </div>\n    )\n}\n\nexport default Login;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Register(props) {\n\n    console.log('123')\n    const [valueEmail, setValueEmail] = React.useState('');\n    const [valuePassword, setValuePassword] = React.useState('');\n\n    function handleChangeEmail(e) {\n        setValueEmail(e.target.value);\n    }\n\n    function handleChangePassword(e) {\n        setValuePassword(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        const email = valueEmail;\n        const password = valuePassword;\n\n        props.registration(email, password);\n    }\n\n    return (\n        <div className=\"register\">\n            <h1 className=\"register__title\">Регистрация</h1>\n            <form className=\"register__form\" onSubmit={handleSubmit}>\n                <input className=\"register__input\" placeholder=\"Email\" value={valueEmail} onChange={handleChangeEmail}></input>\n                <input className=\"register__input\" placeholder=\"Пароль\" value={valuePassword} onChange={handleChangePassword}></input>\n                <button className=\"register__button\" type=\"submit\">Зарегистрироваться</button>\n            </form>\n            <Link className=\"register__link\" to=\"/sign-in\">Уже зарегистрированы? Войти</Link>\n        </div>\n    )\n}\n\nexport default Register ;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction ProtectedRoute({ isLoggedIn, ...props }) {\n        if (!isLoggedIn) {\n            return <Redirect to=\"/sign-in\" />\n        }\n        return <Route { ...props } />\n}\n\nexport default ProtectedRoute;","import React from 'react';\n\nfunction InfoTooltip(props) {\n    return (\n        <div className={`popup popup-notify ${props.isOpen && 'popup_is-opened'}`}>\n            <div className=\"popup__content\">\n                <img className=\"popup-notify__img\" src={props.notifyPopupInfo.image} alt=\"\" />\n                <h2 className=\"popup-notify__title\">{props.notifyPopupInfo.title}</h2>\n                <button type=\"button\" className=\"popup__img-close hover\" onClick={props.onClose}></button>\n            </div>\n        </div>\n    )\n}\n\nexport default InfoTooltip;","export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (email, password) => {\n    return fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({email, password})\n    })\n}\n\nexport const authorize = (email, password) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({email, password})\n    })\n    .then((res => res.json()))\n    .then((data) => {\n        if(data.token) {\n            localStorage.setItem('jwt', data.token);\n            return data.token;\n        }\n    })\n    .catch(err => console.log(err))\n};\n\nexport const getContent = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n      }\n    })\n    .then(res => res.json())\n    .then(data => data)\n  }","export default __webpack_public_path__ + \"static/media/success.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/fail.df8eddf6.svg\";","import React from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddCardPopup from './AddPlacePopup';\nimport DeleteCardPopup from './DeleteCardPopup';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Login from './Login';\nimport Register from \"./Register\";\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport {register, authorize, getContent} from \"./auth\"\nimport success from '../images/success.svg';\nimport fail from '../images/fail.svg'\n\n\nfunction App() {\n\n    const history = useHistory();\n\n    const [currentUser, setCurrentUser] = React.useState({});\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isNotifyPopupOpen, setIsNotifyPopupOpen] = React.useState(false);\n    const [notifyPopupInfo, setNotifyPopupInfo] = React.useState({})\n\n    const [selectedCard, setSelectedCard] = React.useState({});\n    const [cards, setCards] = React.useState([]);\n\n    const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n    const [valueEmail, setValueEmail] = React.useState('');\n\n    React.useEffect(() => {\n        Promise.all([\n            api.getUserInfo(),\n            api.getCards(),\n        ])\n            .then(([userData, cards]) => {\n                setCurrentUser(userData);\n                setCards(cards)\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }, [])\n\n    React.useEffect(() => {\n        const jwt = localStorage.getItem('jwt');\n        if (jwt) {\n            getContent(jwt)\n                .then((res) => {\n                    if (res) {\n                        setValueEmail(res.data.email);\n                    }\n                    setIsLoggedIn(true);\n                    history.push('/');\n                })\n                .catch((err) => {\n                    console.log(err);\n                })\n        }\n    }, [isLoggedIn, history])\n\n    function registration(email, password) {\n        register(email, password)\n            .then(() => {\n                changeNotifyPopup({\n                    path: success,\n                    text: 'Вы успешно зарегистрировались!',\n                })\n                handleNotifyPopupOpen();\n            })\n            .catch((err) => {\n                changeNotifyPopup({\n                    path: fail,\n                    text: 'Что-то пошло не так! Попробуйте ещё раз.',\n                })\n                handleNotifyPopupOpen();\n                console.log(err);\n            })\n    }\n\n    function authorization(email, password) {\n        authorize(email, password)\n        if (email !== valueEmail) {\n            setValueEmail(email);\n        }\n        setIsLoggedIn(true);\n        history.push('/');\n    }\n\n    function signOut() {\n        localStorage.removeItem('jwt');\n        history.push('/sign-in');\n    }\n\n    function handleNotifyPopupOpen() {\n        setIsNotifyPopupOpen(true);\n    }\n\n    function changeNotifyPopup({ path, text }) {\n        setNotifyPopupInfo({\n            image: path,\n            title: text,\n        })\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard({ name: card.name, link: card.link });\n    }\n\n    function handleUpdateUser(user) {\n        api.setUserInfo(user)\n            .then((userData) => {\n                setCurrentUser(userData);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleUpdateAvatar({ avatar }) {\n        api.setUserAvatar(avatar)\n            .then((data) => {\n                setCurrentUser(data);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleCardLike(props) {\n        const isLiked = props.likes.some(i => i._id === currentUser._id); // Снова проверяем, есть ли уже лайк на этой карточке\n        const changeLikeCardStatus = isLiked ? api.deleteLike(props._id) : api.setLike(props._id) //if-else для лайка\n        changeLikeCardStatus.then((newCard) => { // Отправляем запрос в API и получаем обновлённые данные карточки\n            setCards((state) => state.map((c) => c._id === props._id ? newCard : c));\n        })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleCardDelete(props) {\n        api.deleteCard(props._id).then(() => {\n            setCards((state) => state.filter((c) => c._id !== props._id)); //с помощью filter делаем копию массива без нашей карточки\n        })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function handleAddPlaceSubmit(card) {\n        api.setCards(card)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                closeAllPopups()\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsNotifyPopupOpen(false);\n\n        setSelectedCard({});\n    }\n\n    return (< CurrentUserContext.Provider value={currentUser} >\n        <div className=\"page\" >\n\n            <Header\n                email={valueEmail}\n                signOut={signOut}\n            />\n\n            <Switch>\n\n                <Route path=\"/sign-in\">\n                    <Login authorization={authorization} />\n                </Route>\n\n                <Route path=\"/sign-up\" >\n                    <Register registration={registration} />\n                </Route>\n\n                <Route puth=\"/\"> {\n                    isLoggedIn ? < Redirect to=\"/\" /> : < Redirect to=\"sign-in\" />\n                } </Route>\n\n                <ProtectedRoute\n                    exact path=\"/\"\n                    isLoggedIn={isLoggedIn}\n                    component={Main}\n                    onEditAvatar={handleEditAvatarClick}\n                    onEditProfile={handleEditProfileClick}\n                    onAddPlace={handleAddPlaceClick}\n                    onCardClick={handleCardClick}\n\n                    cards={cards}\n                    onCardLike={handleCardLike}\n                    onCardDelete={handleCardDelete}\n                />\n            </Switch >\n\n            <Footer />\n\n            <EditProfilePopup\n                isOpen={isEditProfilePopupOpen}\n                onClose={closeAllPopups}\n                onUpdateUser={handleUpdateUser}\n            />\n\n            <AddCardPopup\n                isOpen={isAddPlacePopupOpen}\n                onClose={closeAllPopups}\n                onAddPlace={handleAddPlaceSubmit}\n            />\n\n            <ImagePopup card={selectedCard}\n                onClose={closeAllPopups}\n            />\n\n            <DeleteCardPopup />\n\n            <EditAvatarPopup\n                isOpen={isEditAvatarPopupOpen}\n                onClose={closeAllPopups}\n                onUpdateAvatar={handleUpdateAvatar}\n            />\n\n            <InfoTooltip\n                isOpen={isNotifyPopupOpen}\n                onClose={closeAllPopups}\n                notifyPopupInfo={notifyPopupInfo}\n            />\n\n        </div>\n    </CurrentUserContext.Provider >\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}